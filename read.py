import xlrd  #引入模块
import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
#数据表构建
#教育部数据，获取省份，办学层次
df_pro = pd.read_excel('/data/lilumin/cs_fudamental/school_list.xls')
#读取比赛数据
df_competition=pd.read_excel('/data/lilumin/cs_fudamental/output.xlsx')
#读取软微排名
df_rank=pd.read_csv('/data/lilumin/cs_fudamental/软科中国大学排名.csv')

# tmp=pd.merge(df_competition,df_rank[['学校名称', '排名', '软科总得分']],on="学校名称",how="left")
df_competition=pd.merge(df_competition,df_pro[['学校名称','所在地','办学层次']],on="学校名称",how="left")
df_rank=pd.merge(df_rank,df_pro[['学校名称','所在地']],on="学校名称",how="left")
df_rank['rk_score']=600-df_rank['排名']
grouped_df_rank = df_rank.groupby('所在地')['rk_score'].sum().reset_index()

#双一流名单
top2_school_A=['北京大学','中国人民大学','清华大学','北京航空航天大学','北京理工大学','中国农业大学','北京师范大学','中央民族大学',
             '南开大学','天津大学','大连理工大学','吉林大学','哈尔滨工业大学','复旦大学','同济大学','上海交通大学','华东师范大学',
             '南京大学','东南大学','浙江大学','中国科学技术大学','厦门大学','山东大学','中国海洋大学','武汉大学','华中科技大学',
             '中南大学','中山大学','华南理工大学','四川大学','重庆大学','电子科技大学','西安交通大学','西北工业大学','兰州大学','国防科技大学']
top2_school_B=['东北大学','郑州大学','湖南大学','云南大学','西北农林科技大学','新疆大学']
top2_subject=['北京交通大学','北京工业大学','北京科技大学','北京化工大学','北京邮电大学','北京林业大学','北京协和医学院','北京中医药大学','首都师范大学',
              '北京外国语大学','中国传媒大学','中央财经大学','对外经济贸易大学','外交学院','中国人民公安大学','北京体育大学','中央音乐学院','中国音乐学院',
              '中央美术学院','中央戏剧学院','中国政法大学','天津工业大学','天津医科大学','天津中医药大学','华北电力大学','河北工业大学','太原理工大学',
              '内蒙古大学','辽宁大学','大连海事大学','延边大学','东北师范大学','哈尔滨工程大学','东北农业大学','东北林业大学','华东理工大学','东华大学',
              '上海海洋大学','上海中医药大学','上海外国语大学','上海财经大学','上海体育学院','上海音乐学院','上海大学','苏州大学','南京航空航天大学',
              '南京理工大学','中国矿业大学','南京邮电大学','河海大学','江南大学','南京林业大学','南京信息工程大学','南京农业大学','南京中医药大学',
              '中国药科大学','南京师范大学','中国美术学院','安徽大学','合肥工业大学','福州大学','南昌大学','河南大学','中国地质大学','武汉理工大学',
              '华中农业大学','华中师范大学','中南财经政法大学','湖南师范大学','暨南大学','广州中医药大学','华南师范大学','海南大学','广西大学','西南交通大学',
              '西南石油大学','成都理工大学','四川农业大学','成都中医药大学','西南大学','西南财经大学','贵州大学','西藏大学','西北大学','西安电子科技大学','长安大学',
              '陕西师范大学','青海大学','宁夏大学','石河子大学','中国石油大学','宁波大学','中国科学院大学','第二军医大学','第四军医大学']
#计算比赛成绩
com=[]
for i in df_competition["奖项"]:
    if i=="一等奖":
        com.append(10)
    elif i=="二等奖":
        com.append(5)
    else:
        com.append(1)
df_competition['com_score']=com
#用比赛成绩得到的指标
grouped_df_com = df_competition.groupby('所在地')['com_score'].sum().reset_index()
#各省高校数量
province_counts = df_pro.groupby('所在地').size().reset_index(name='高校数量')
#各省面积
data = [
    ["新疆维吾尔自治区", 1631585],["西藏自治区", 1202189],["内蒙古自治区", 1145499],["青海省", 696647],
    ["四川省", 486116],["黑龙江省", 452538], ["甘肃省", 425889],["云南省", 383186],["广西省", 237606],
    ["湖南省", 211836],    ["陕西省", 205624],    ["吉林省", 191202],    ["河北省", 188545],    ["湖北省", 185937],    ["广东省", 179656],    ["贵州省", 176099],    ["江西省", 166936],    ["河南省", 165664],
    ["山东省", 157901],    ["山西省", 156698],    ["辽宁省", 148379],    ["安徽省", 140140],    ["福建省", 123951],
    ["江苏省", 106600],    ["浙江省", 105506],    ["重庆市", 82374],    ["宁夏回族自治区", 51893],    ["海南省", 35177],    ["北京市", 16406],    ["天津市", 11917],    ["上海市", 8359]]

# 定义列名
columns = ["所在地", "面积"]

# 创建DataFrame
df_area = pd.DataFrame(data, columns=columns)
#高校数量/面积
df_ratio_num_divide_area=pd.merge(province_counts,df_area,on="所在地",how="left")
df_ratio_num_divide_area['高校数量面积比']=df_ratio_num_divide_area['高校数量']/df_ratio_num_divide_area['面积']
#各省科研经费投入
data = [["北京市",  38052204],    ["天津市", 6786920],    ["河北省",  4352470],    ["山西省",  3227336],    ["内蒙古自治区",  1033565],
    ["辽宁省",  8471292],    ["吉林省", 4043153],    ["黑龙江省",  8423493],    ["上海市",  24746713],    ["江苏省",  28548938],
    ["浙江省", 17206242],    ["安徽省", 10803908],    ["福建省", 6730144],    ["江西省",  4034063],    ["山东省", 14518165],
    ["河南省",  6544978],    ["湖北省",  14887052],    ["湖南省",  9368721],    ["广东省",  24098858],    ["广西省",  2543496],
    ["海南省", 944726],    ["重庆市",  6674383],    ["四川省",  11957240],    ["贵州省",  1718842],    ["云南省",  2616066],
    ["西藏自治区", 135887],    ["陕西省",  16840826],    ["甘肃省",  1699601],    ["青海省",  420142],    ["宁夏回族自治区", 708822],    ["新疆维吾尔自治区", 718650]
]

# 定义列名
columns = ["所在地", "科研经费"]

#各省科研经费
df_expense = pd.DataFrame(data, columns=columns)
#科技人力
data=[["北京市",  79597],    ["天津市", 27001],    ["河北省",  51824],    ["山西省",27701],    ["内蒙古自治区",  17533],
    ["辽宁省", 45267],   ["吉林省", 29898],    ["黑龙江省",  39610],    ["上海市", 73607],    ["江苏省",  92703],
    ["浙江省", 65613],    ["安徽省", 53023],    ["福建省", 35963],    ["江西省",  29941],    ["山东省", 92434],
    ["河南省",  69683],    ["湖北省",  67868], ["湖南省",  54866],    ["广东省",  112035],    ["广西省",  34712],
    ["海南省", 10465],    ["重庆市",  30330], ["四川省", 59478],    ["贵州省",  21739],    ["云南省",  24642],
    ["西藏自治区", 1359],    ["陕西省", 56743],    ["甘肃省",  14332],    ["青海省",  4892],    ["宁夏回族自治区", 6923],    ["新疆维吾尔自治区", 14090]
]
columns=['所在地','教学与科研人员']
df_human_resource=pd.DataFrame(data, columns=columns)

#研究与发展机构
data=[["北京市",  944],["天津市", 350],["河北省", 392],["山西省",281], ["内蒙古自治区",292],
    ["辽宁省", 831],["吉林省", 529], ["黑龙江省", 439], ["上海市", 454],["江苏省",  991],
    ["浙江省", 601],["安徽省", 528],    ["福建省", 816], ["江西省", 374],["山东省", 987],
    ["河南省", 832],["湖北省",  636], ["湖南省", 639],["广东省",  1436],  ["广西省",238],
    ["海南省", 61], ["重庆市",  384], ["四川省", 587], ["贵州省",  222],    ["云南省",  302],
    ["西藏自治区", 20],["陕西省", 734],    ["甘肃省",  242],    ["青海省",  36],    ["宁夏回族自治区", 56],    ["新疆维吾尔自治区", 85]
]
columns=['所在地','研究与发展机构']
df_insititue=pd.DataFrame(data, columns=columns)

#合并表格计算分数
df=pd.merge(grouped_df_com,grouped_df_rank[['所在地','rk_score']],on="所在地",how="left")
df=pd.merge(df,df_ratio_num_divide_area,on="所在地",how="left")
df=pd.merge(df,df_expense,on="所在地",how="left")
df=pd.merge(df,df_human_resource,on="所在地",how="left")
df=pd.merge(df,df_insititue,on="所在地",how="left")

scaler = StandardScaler()

# 标准化数据
df_scaled = df.copy()
df_scaled[df.columns[1:]] = scaler.fit_transform(df[df.columns[1:]])

df_scaled['score']=df_scaled['com_score']+df_scaled['rk_score']+df_scaled['高校数量面积比']+df_scaled['科研经费']+df_scaled['教学与科研人员']+df['研究与发展机构']
#排序
sorted_df = df_scaled.sort_values(by='score',ascending=False)  
  
# 为'score'列添加排名
sorted_df['rank'] = sorted_df['score'].rank(ascending=False)  
print(sorted_df)